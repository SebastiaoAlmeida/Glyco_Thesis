load("C:/Users/Sebastião Almeida/Desktop/Thesis_Sebastiao_Almeida/Datasets/Multiple Predictors/GMfreq.Rdata")
str(GMfreq)
head(GMfreq)
View(GMfreq)
View(GMfreq)
table(GMfreq$clinvar_sig)
nans <- subset(GMfreq, is.nan(GMfreq$clinvar_sig))
length(GMfreq)
nrows(GMfreq)
nrowsGMfreq)
nrow(GMfreq)
nrow(nans)
print(GMfreq[1520,])
nans <- subset(GMfreq, is.na(GMfreq$clinvar_sig))
nrow(GMfreq)
nrow(nans)
GMfreq$PROVEAN_score
table(GMfreq$PROVEAN_score)
View(GMfreq)
View(GMfreq)
library(limma)
install.packages("limma")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma", version = "3.8")
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("limma")
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install("limma")
install.packages(pkgs="c:/placeholder/limma_3.38.2.zip", repos = NULL,lib="c:/placeholder/libraries")
?carrollDiagram
??carrollDiagram
f <- function(x) {
10
}
f(stop("This is an error!"))
f <- function(x) {
force(x)
10
}
f(stop("This is an error!"))
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
adders[[5]](10)
adders[[5]](5)
adders[[1]]
adders[[2]]
adders[[2]](0)
f <- function(x = ls()) {
a <- 1
x
}
f()
f(ls())
x <- NULL
if (!is.null(x) && x > 0) {
}
`&&` <- function(x, y) {
if (!x) return(FALSE)
if (!y) return(FALSE)
TRUE
}
a <- NULL
!is.null(a) && a > 0
if (is.null(a)) stop("a is null")
!is.null(a) || stop("a is null")
?||
||
TRUE || TRUE
TRUE || FALSE
FALSE || FALSE
!is.null(a) || stop("a is null")
f <- function(...) {
names(list(...))
}
f(a = 1, b = 2)
sum(1, 2, NA, na.mr = TRUE)
?sum
sum(1,2)
sum(1,2,NA)
sum(1, 2, NA, na.rm = TRUE)
?sample
x <- sample(replace = TRUE, 20, x = c(1:10, NA))
xx <- sample(c(1:10,NA), 20,replace = TRUE)
?runif
yy <- runif(20, max = 20)
y <- runif(min = 0, max = 1, 20)
yy <- runif(20, min = 1, max = 20)
yy <- runif(20, min = 1, max = 20)
yy <- runif(20, max = 20)
y <- runif(min = 0, max = 1, 20)
yy <- runif(20)
?cor
cor(m = "k", y = y, u = "p", x = x)
cor(x,y,method = "kendall", use = "pairwise")
f1 <- function(x = {y <- 1; 2}, y = 0) {
x + y
}
f1()
f1({y <- 1; 2},0)
f2 <- function(x = z) {
z <- 100
x
}
f2()
`%+%` <- function(a, b) paste0(a, b)
"new" %+% " string"
%+% <- function(a, b) paste0(a, b)
`%+%`("new", " string")
`% %` <- function(a, b) paste(a, b)
`%'%` <- function(a, b) paste(a, b)
`%/\\%` <- function(a, b) paste(a, b)
"a" % % "b"
"a" %'% "b"
"a" %/\% "b"
?paste0
"a" %-% "b" %-% "c"
`%-%` <- function(a, b) paste0("(", a, " %-% ", b, ")")
"a" %-% "b" %-% "c"
`second<-` <- function(x, value) {
x[2] <- value
x
}
x <- 1:10
second(x) <- 5L
x
x <- 1:10
second(x) <- 5
second(x) <- 5
x
5
5L
library(pryr)
install.packages("pryr")
library(pryr)
x <- 1:10
address(x)
second(x) <- 6L
address(x)
x <- 1:10
address(x)
x[2] <- 7L
address(x)
x <- 1:10
address(x)
x[2] <- 7L
address(x)
`second<-` <- function(x, value) {
x[2] <- value
x
}
x <- 1:10
second(x) <- 5L
library(pryr)
x <- 1:10
address(x)
second(x) <- 6L
address(x)
x <- 1:10
address(x)
x[2] <- 7L
address(x)
`modify<-` <- function(x, position, value) {
x[position] <- value
x
}
modify(x, 1) <- 10
x <- 1:10
`modify<-` <- function(x, position, value) {
x[position] <- value
x
}
modify(x, 1) <- 10
x
x <- c(a = 1, b = 2, c = 3)
names(x)
names(x)[2] <- "two"
names(x)
objs <- mget(ls("package:base"), inherits = TRUE)
funs <- Filter(is.function, objs)
rm(modify<-)
rm("modify<-")
rm("second<-")
?Filter
grep("<-$", objs)
objs
grep("<-$", funs)
funs[1]
funs[[1]]
funs[[5]]
names(funs[[5]])
name(funs[[5]])
names(funs)
grep("<-$", names(funs))
names(funs)[grep("<-$", names(funs))]
rep_functions <- names(funs)[grep("<-$", names(funs))]
length(grep("<-$", names(funs)))
?xor
xor(TRUE, FALSE)
xor(TRUE, TRUE)
TRUE xor TRUE
TRUE %xor% TRUE
[T,T]
c(T,T)
sum(c(T,T))
'%xor%' <- function(a,b) sum(c(a,b)) == 1
TRUE %xor% TRUE
FALSE %xor% TRUE
?intersect
aa <- c(1,2,3,4,5)
bb <- c(2,4,6,8,10)
intersect(aa,bb)
union(aa,bb)
setdiff(aa,bb)
'%intersect%' <-
intersect <- yay
'%intersect%' <-
intersect <- function("yay"){}
'%intersect%' <-
intersect <- function(a){}
library("survplot")
install.packages("survplot")
install.packages("survminer")
library("survminer")
?survplot
?ggsurvplot
?survfit
library(dplyr)
data(ovarian)
library("survplot")
library("survminer")
library("survplot")
install.packages("survplot")
library("survplot")
library("survival")
library("survminer")
library(dplyr)
data(ovarian)
glimpse(ovarian)
ovarian$rx <- factor(ovarian$rx,
levels = c("1", "2"),
labels = c("A", "B"))
ovarian$resid.ds <- factor(ovarian$resid.ds,
levels = c("1", "2"),
labels = c("no", "yes"))
ovarian$ecog.ps <- factor(ovarian$ecog.ps,
levels = c("1", "2"),
labels = c("good", "bad"))
glimpse(ovarian)
hist(ovarian$age)
ovarian <- ovarian %>% mutate(age_group = ifelse(age >=50, "old", "young"))
ovarian$age_group <- factor(ovarian$age_group)
surv_object <- Surv(time = ovarian$futime, event = ovarian$fustat)
surv_object
fit1 <- survfit(surv_object ~ rx, data = ovarian)
summary(fit1)
ggsurvplot(fit1, data = ovarian, pval = TRUE)
fit2 <- survfit(surv_object ~ resid.ds, data = ovarian)
ggsurvplot(fit2, data = ovarian, pval = TRUE)
fit.coxph <- coxph(surv_object ~ rx + resid.ds + age_group + ecog.ps,
data = ovarian)
ggforest(fit.coxph, data = ovarian)
data <- read.table(file ="C:\Users\Sebastião Almeida\Desktop\Tese\Main_Work\Glyco_Paper\Virgin_Data.csv",
sep="\t",quote="",header=T)
data <- read.table(file ="C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Glyco_Paper/Virgin_Data.csv",
sep="/t",quote="",header=T)
data <- read.table(file ="C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Glyco_Paper/Virgin_Data.xls",
sep="/t",quote="",header=T)
data <- read.table(file ="C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Glyco_Paper/Virgin_Data.xls",
sep="\t",quote="",header=T)
data <- read.table(file ="C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Glyco_Paper/Virgin_Data.txt",
sep="\t",quote="",header=T)
data
data[1:5,]
nrow(data)
nrow(unique(data))
data
glycogenes <- read.table(file ="C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Glyco_Paper/Virgin_Data.txt",
sep="\t",quote="",header=T)
unique(glycogenes$Gene.stable.ID)
unique(glycogenes$Gene.name)
nrow(glycogenes)
unique(glycogenes$Gene.stable.ID)
unique(glycogenes$Gene.name)
table(glycogenes$GO.term.name)
sort(table(glycogenes$GO.term.name))
?sort
sort(table(glycogenes$GO.term.name),decreasing=T)
unique(glycogenes$Gene.stable.ID)
unique(glycogenes$Gene.name)
glycogenes$Gene.stable.ID
as.character(glycogenes$Gene.stable.ID)
unique(as.character(glycogenes$Gene.stable.ID))
unique(as.character(glycogenes$Gene.stable.ID))
unique(as.character(glycogenes$Gene.stable.ID))
unique(glycogenes$Gene.stable.ID)
glycogenes$Gene.name
unique(as.character(glycogenes$Gene.name))
unique(as.character(glycogenes$Gene.name))
unique(as.character(glycogenes$Gene.stable.ID))
print(i)
for (i in unique(as.character(glycogenes$Gene.stable.ID))){
print(i)
}
print(data[data$Gene.stable.ID == i,])
for (i in unique(as.character(glycogenes$Gene.stable.ID))){
print(data[data$Gene.stable.ID == i,])
}
print(data[data$Gene.stable.ID == i,2])
for (i in unique(as.character(glycogenes$Gene.stable.ID))){
print(data[data$Gene.stable.ID == i,2])
}
glycogenes$Gene.stable.ID <- as.character(glycogenes$Gene.stable.ID))
glycogenes$Gene.stable.ID <- as.character(glycogenes$Gene.stable.ID)
glycogenes$Gene.name <- as.character(glycogenes$Gene.name)
glycogenes$Gene.stable.ID
for (i in unique(glycogenes$Gene.stable.ID)){
print(data[data$Gene.stable.ID == i,2])
}
glycogenes$Gene.stable.ID <- as.character(glycogenes$Gene.stable.ID)
glycogenes$Gene.name <- as.character(glycogenes$Gene.name)
for (i in unique(glycogenes$Gene.stable.ID)){
print(data[data$Gene.stable.ID == i,2])
}
glycogenes$Gene.name
for (i in unique(glycogenes$Gene.stable.ID)){
print(glycogenes[glycogenes$Gene.stable.ID == i,2])
}
for (i in unique(glycogenes$Gene.stable.ID)){
print(length(unique(glycogenes[glycogenes$Gene.stable.ID == i,2])))
}
for (i in unique(glycogenes$Gene.stable.ID)){
if (length(unique(glycogenes[glycogenes$Gene.stable.ID == i,2])) != 1){
print(i)
}
}
unique(glycogenes$Gene.name)
unique(glycogenes$Gene.stable.ID)
source("C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Code/Functions/Mutations_First_Work_Functions.R")
library(RColorBrewer)
library(gplots)
library(plyr)
setwd("C:/Users/Sebastião Almeida/Desktop/Tese/Main_Work/Code/Mutations_First_Work")
